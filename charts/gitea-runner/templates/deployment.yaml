apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gitea-runner.fullname" . }}
  labels:
    {{- include "gitea-runner.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gitea-runner.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gitea-runner.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gitea-runner.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      {{- range .Values.images }}
        {{- with .initContainer }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
      {{- $fullName := include "gitea-runner.fullname" . -}}
      {{- range .Values.images }}
        - name: {{ .name }}
          {{- with .securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .repository }}:{{ .tag }}"
          imagePullPolicy: {{ .pullPolicy }}
          {{- with .command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .persistentVolume.enabled }}
          - name: {{ .persistentVolume.name }}
            mountPath: {{ .persistentVolume.mountPath }}
            subPath: {{ .persistentVolume.subPath }}
          {{- end }}
          - name: docker-certs
            mountPath: /certs
      {{- end }}
      {{- range .Values.images }}
      {{- if .persistentVolume.enabled }}
      volumes:
      - name: {{ .persistentVolume.name }}
        persistentVolumeClaim:
          claimName: {{ $fullName }}
      - name: docker-certs
        emptyDir: {}
      - name: private-registry-cert
        secret:
          secretName: registry-secret
      {{- end }}
      {{- end }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
